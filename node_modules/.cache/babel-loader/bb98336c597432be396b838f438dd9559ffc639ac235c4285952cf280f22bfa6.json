{"ast":null,"code":"var _jsxFileName = \"/Users/akeva/Desktop/westcliff/m6-w2-d2-demo/src/features/todos/TodoListItem.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ReactComponent as TimesSolid } from './times-solid.svg';\nimport { availableColors, capitalize } from '../filters/colors';\nimport { todoColorSelected, todoDeleted, todoToggled, selectTodoById } from './todosSlice';\n\n// Destructure `props.id`, since we just need the ID value\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoListItem = _ref => {\n  _s();\n  let {\n    id\n  } = _ref;\n  // Call our `selectTodoById` with the state _and_ the ID value\n  const todo = useSelector(state => selectTodoById(state, id));\n  const {\n    text,\n    completed,\n    color\n  } = todo;\n  const dispatch = useDispatch();\n  const handleCompletedChanged = () => {\n    dispatch(todoToggled(todo.id));\n  };\n  const handleColorChanged = e => {\n    const color = e.target.value;\n    dispatch(todoColorSelected(todo.id, color));\n  };\n  const onDelete = () => {\n    dispatch(todoDeleted(todo.id));\n  };\n  const colorOptions = availableColors.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: c,\n    children: capitalize(c)\n  }, c, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"segment label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"toggle\",\n          type: \"checkbox\",\n          checked: completed,\n          onChange: handleCompletedChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-text\",\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"segment buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"colorPicker\",\n          value: color,\n          style: {\n            color\n          },\n          onChange: handleColorChanged,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), colorOptions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"destroy\",\n          onClick: onDelete,\n          children: /*#__PURE__*/_jsxDEV(TimesSolid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoListItem, \"sYuTICH3ezxhLVQORlD7K4+KScQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = TodoListItem;\nexport default TodoListItem;\nvar _c;\n$RefreshReg$(_c, \"TodoListItem\");","map":{"version":3,"names":["React","useSelector","useDispatch","ReactComponent","TimesSolid","availableColors","capitalize","todoColorSelected","todoDeleted","todoToggled","selectTodoById","TodoListItem","id","todo","state","text","completed","color","dispatch","handleCompletedChanged","handleColorChanged","e","target","value","onDelete","colorOptions","map","c"],"sources":["/Users/akeva/Desktop/westcliff/m6-w2-d2-demo/src/features/todos/TodoListItem.js"],"sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { ReactComponent as TimesSolid } from './times-solid.svg'\n\nimport { availableColors, capitalize } from '../filters/colors'\nimport {\n  todoColorSelected,\n  todoDeleted,\n  todoToggled,\n  selectTodoById,\n} from './todosSlice'\n\n// Destructure `props.id`, since we just need the ID value\nconst TodoListItem = ({ id }) => {\n  // Call our `selectTodoById` with the state _and_ the ID value\n  const todo = useSelector((state) => selectTodoById(state, id))\n  const { text, completed, color } = todo\n\n  const dispatch = useDispatch()\n\n  const handleCompletedChanged = () => {\n    dispatch(todoToggled(todo.id))\n  }\n\n  const handleColorChanged = (e) => {\n    const color = e.target.value\n    dispatch(todoColorSelected(todo.id, color))\n  }\n\n  const onDelete = () => {\n    dispatch(todoDeleted(todo.id))\n  }\n\n  const colorOptions = availableColors.map((c) => (\n    <option key={c} value={c}>\n      {capitalize(c)}\n    </option>\n  ))\n\n  return (\n    <li>\n      <div className=\"view\">\n        <div className=\"segment label\">\n          <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={completed}\n            onChange={handleCompletedChanged}\n          />\n          <div className=\"todo-text\">{text}</div>\n        </div>\n        <div className=\"segment buttons\">\n          <select\n            className=\"colorPicker\"\n            value={color}\n            style={{ color }}\n            onChange={handleColorChanged}\n          >\n            <option value=\"\"></option>\n            {colorOptions}\n          </select>\n          <button className=\"destroy\" onClick={onDelete}>\n            <TimesSolid />\n          </button>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default TodoListItem\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,cAAc,IAAIC,UAAU,QAAQ,mBAAmB;AAEhE,SAASC,eAAe,EAAEC,UAAU,QAAQ,mBAAmB;AAC/D,SACEC,iBAAiB,EACjBC,WAAW,EACXC,WAAW,EACXC,cAAc,QACT,cAAc;;AAErB;AAAA;AACA,MAAMC,YAAY,GAAG,QAAY;EAAA;EAAA,IAAX;IAAEC;EAAG,CAAC;EAC1B;EACA,MAAMC,IAAI,GAAGZ,WAAW,CAAEa,KAAK,IAAKJ,cAAc,CAACI,KAAK,EAAEF,EAAE,CAAC,CAAC;EAC9D,MAAM;IAAEG,IAAI;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGJ,IAAI;EAEvC,MAAMK,QAAQ,GAAGhB,WAAW,EAAE;EAE9B,MAAMiB,sBAAsB,GAAG,MAAM;IACnCD,QAAQ,CAACT,WAAW,CAACI,IAAI,CAACD,EAAE,CAAC,CAAC;EAChC,CAAC;EAED,MAAMQ,kBAAkB,GAAIC,CAAC,IAAK;IAChC,MAAMJ,KAAK,GAAGI,CAAC,CAACC,MAAM,CAACC,KAAK;IAC5BL,QAAQ,CAACX,iBAAiB,CAACM,IAAI,CAACD,EAAE,EAAEK,KAAK,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMO,QAAQ,GAAG,MAAM;IACrBN,QAAQ,CAACV,WAAW,CAACK,IAAI,CAACD,EAAE,CAAC,CAAC;EAChC,CAAC;EAED,MAAMa,YAAY,GAAGpB,eAAe,CAACqB,GAAG,CAAEC,CAAC,iBACzC;IAAgB,KAAK,EAAEA,CAAE;IAAA,UACtBrB,UAAU,CAACqB,CAAC;EAAC,GADHA,CAAC;IAAA;IAAA;IAAA;EAAA,QAGf,CAAC;EAEF,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,MAAM;MAAA,wBACnB;QAAK,SAAS,EAAC,eAAe;QAAA,wBAC5B;UACE,SAAS,EAAC,QAAQ;UAClB,IAAI,EAAC,UAAU;UACf,OAAO,EAAEX,SAAU;UACnB,QAAQ,EAAEG;QAAuB;UAAA;UAAA;UAAA;QAAA,QACjC,eACF;UAAK,SAAS,EAAC,WAAW;UAAA,UAAEJ;QAAI;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QACnC,eACN;QAAK,SAAS,EAAC,iBAAiB;QAAA,wBAC9B;UACE,SAAS,EAAC,aAAa;UACvB,KAAK,EAAEE,KAAM;UACb,KAAK,EAAE;YAAEA;UAAM,CAAE;UACjB,QAAQ,EAAEG,kBAAmB;UAAA,wBAE7B;YAAQ,KAAK,EAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QAAU,EACzBK,YAAY;QAAA;UAAA;UAAA;UAAA;QAAA,QACN,eACT;UAAQ,SAAS,EAAC,SAAS;UAAC,OAAO,EAAED,QAAS;UAAA,uBAC5C,QAAC,UAAU;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QACP;MAAA;QAAA;QAAA;QAAA;MAAA,QACL;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACH;AAET,CAAC;AAAA,GAvDKb,YAAY;EAAA,QAEHV,WAAW,EAGPC,WAAW;AAAA;AAAA,KALxBS,YAAY;AAyDlB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}